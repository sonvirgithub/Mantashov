import React, { useEffect, useState } from "react";
import "./ContentOfDetails.css";
import { useCookies } from "react-cookie";

function ContentOfDetails({ title, links, containerClassName, mode }) {
  const [cookies] = useCookies();
  var userLang = navigator.language || navigator.userLanguage;

  const lng = cookies.lang ? cookies.lang : userLang.split("-")[0];
  const [currentUrl, setCurrentUrl] = useState("");

  const openNewTab = () => {
    if (links && links.length) {
      const el = document.createElement("input");
      el.value = window.location.href;
      document.body.appendChild(el);
      el.select();
      document.execCommand("copy");
      document.body.removeChild(el);
    } else {
      const newWindow = window.open(
        currentUrl,
        "_blank",
        "noopener,noreferrer"
      );
      if (newWindow) newWindow.opener = null;
    }
  };

  useEffect(() => {
    setCurrentUrl(window.location.href);
  }, []);
  return (
    <div className={`share-content ${containerClassName}`}>
      <p
        className="share-content-title"
        lang={lng}
        style={{ color: `${mode === "dark" ? "#FFFFFF" : "#000000"}` }}
      >
        {title}
      </p>
      <div className="links-for-share-container flex-space-between">
        <div className="links-for-share flex-space-between">
          {links && links.length ? (
            links.map((link) => (
              <div className="one-link-container" key={link}>
                <p className="one-link-for-share" lang={lng}>
                  {link}
                </p>
              </div>
            ))
          ) : (
            <p className="one-link-for-share" lang={lng}>
              {currentUrl}
            </p>
          )}
        </div>
        <div className="icon-and-text" onClick={openNewTab}>
          {links && links.length ? (
            <svg
              width="25"
              height="25"
              viewBox="0 0 25 25"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M9.1547 19.8327L7.88907 21.0906C7.35887 21.6124 6.64475 21.9049 5.90079 21.9049C5.15684 21.9049 4.44272 21.6124 3.91252 21.0906C3.65401 20.8346 3.4488 20.5299 3.30875 20.1941C3.16871 19.8583 3.0966 19.4981 3.0966 19.1343C3.0966 18.7705 3.16871 18.4102 3.30875 18.0745C3.4488 17.7387 3.65401 17.434 3.91252 17.178L8.56876 12.5607C9.53282 11.6029 11.3484 10.1935 12.6719 11.506C12.8143 11.6579 12.9859 11.7795 13.1763 11.8636C13.3668 11.9477 13.5722 11.9926 13.7804 11.9956C13.9886 11.9985 14.1952 11.9595 14.388 11.8809C14.5807 11.8022 14.7557 11.6856 14.9024 11.5378C15.0491 11.3901 15.1645 11.2143 15.2418 11.021C15.319 10.8276 15.3566 10.6207 15.3521 10.4126C15.3477 10.2044 15.3013 9.99928 15.2159 9.80943C15.1304 9.61958 15.0076 9.44889 14.8547 9.30755C12.6078 7.07627 9.28282 7.48877 6.38751 10.3623L1.73127 14.9811C1.1811 15.5235 0.744617 16.1702 0.447353 16.8833C0.150089 17.5964 -0.00198714 18.3617 1.9604e-05 19.1343C-0.0018999 19.9069 0.150216 20.6721 0.447475 21.3852C0.744733 22.0983 1.18117 22.745 1.73127 23.2875C2.84017 24.3874 4.33969 25.0032 5.90158 25C7.41251 25 8.92345 24.4297 10.0719 23.2875L11.3391 22.0296C11.4836 21.8867 11.5984 21.7167 11.6771 21.5292C11.7557 21.3418 11.7966 21.1407 11.7973 20.9375C11.798 20.7342 11.7586 20.5329 11.6813 20.3449C11.604 20.1569 11.4904 19.986 11.3469 19.8421C11.0568 19.5513 10.6635 19.387 10.2527 19.3853C9.84198 19.3835 9.44723 19.5444 9.1547 19.8327ZM23.2672 1.88868C20.85 -0.508231 17.4719 -0.63792 15.2375 1.58087L13.6609 3.14651C13.3696 3.43577 13.2051 3.82891 13.2037 4.23945C13.2022 4.64998 13.3639 5.04428 13.6531 5.33561C13.9424 5.62694 14.3355 5.79143 14.746 5.7929C15.1566 5.79436 15.5509 5.63268 15.8422 5.34343L17.4203 3.77934C18.5766 2.62932 20.0937 3.10589 21.0859 4.08715C21.6109 4.6106 21.9016 5.30436 21.9016 6.04344C21.9016 6.78251 21.6109 7.47627 21.0859 7.99816L16.1172 12.9264C13.8453 15.178 12.7797 14.1233 12.325 13.6717C12.1808 13.5285 12.0097 13.415 11.8216 13.3379C11.6336 13.2608 11.4321 13.2215 11.2289 13.2222C11.0256 13.2229 10.8244 13.2637 10.6369 13.3422C10.4494 13.4206 10.2792 13.5352 10.1359 13.6795C9.99272 13.8237 9.87931 13.9948 9.80219 14.1829C9.72507 14.371 9.68576 14.5724 9.68648 14.7757C9.68721 14.9789 9.72796 15.1801 9.80642 15.3676C9.88488 15.5551 9.99951 15.7254 10.1438 15.8686C11.1875 16.903 12.3781 17.4155 13.625 17.4155C15.1516 17.4155 16.7656 16.6467 18.3016 15.1233L23.2703 10.1966C23.8193 9.6534 24.2549 9.00652 24.5518 8.29356C24.8487 7.5806 25.0011 6.81576 25 6.04344C25.0014 5.27055 24.8489 4.50513 24.5514 3.7918C24.2539 3.07847 23.8173 2.43152 23.2672 1.88868Z"
                fill={`${mode === "dark" ? "#ffffff" : "#000000"}`}
              />
            </svg>
          ) : (
            <svg
              width="25"
              height="25"
              viewBox="0 0 25 25"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M0.446289 4.66741C0.446289 3.54816 0.89091 2.47475 1.68234 1.68332C2.47377 0.891887 3.54718 0.447266 4.66643 0.447266H17.7105C18.8298 0.447266 19.9032 0.891887 20.6946 1.68332C21.486 2.47475 21.9307 3.54816 21.9307 4.66741V10.5756C21.2055 10.2042 20.43 9.94055 19.6288 9.79297V4.66741C19.6288 3.60854 18.7694 2.74916 17.7105 2.74916H4.66643C3.60756 2.74916 2.74819 3.60854 2.74819 4.66741V17.7115C2.74819 18.7704 3.60756 19.6297 4.66643 19.6297H9.79199C9.93957 20.431 10.2032 21.2065 10.5746 21.9316H4.66643C3.54718 21.9316 2.47377 21.487 1.68234 20.6956C0.89091 19.9042 0.446289 18.8307 0.446289 17.7115V4.66741Z"
                fill={`${mode === "dark" ? "#ffffff" : "#000000"}`}
              />
              <path
                d="M24.8114 17.9057C24.8114 19.7372 24.0838 21.4937 22.7888 22.7888C21.4937 24.0838 19.7372 24.8114 17.9057 24.8114C16.0742 24.8114 14.3177 24.0838 13.0226 22.7888C11.7276 21.4937 11 19.7372 11 17.9057C11 16.0742 11.7276 14.3177 13.0226 13.0226C14.3177 11.7276 16.0742 11 17.9057 11C19.7372 11 21.4937 11.7276 22.7888 13.0226C24.0838 14.3177 24.8114 16.0742 24.8114 17.9057ZM18.673 14.8365C18.673 14.633 18.5922 14.4378 18.4483 14.2939C18.3044 14.15 18.1092 14.0692 17.9057 14.0692C17.7022 14.0692 17.507 14.15 17.3631 14.2939C17.2192 14.4378 17.1384 14.633 17.1384 14.8365V17.1384H14.8365C14.633 17.1384 14.4378 17.2192 14.2939 17.3631C14.15 17.507 14.0692 17.7022 14.0692 17.9057C14.0692 18.1092 14.15 18.3044 14.2939 18.4483C14.4378 18.5922 14.633 18.673 14.8365 18.673H17.1384V20.9749C17.1384 21.1784 17.2192 21.3736 17.3631 21.5175C17.507 21.6613 17.7022 21.7422 17.9057 21.7422C18.1092 21.7422 18.3044 21.6613 18.4483 21.5175C18.5922 21.3736 18.673 21.1784 18.673 20.9749V18.673H20.9749C21.1784 18.673 21.3736 18.5922 21.5175 18.4483C21.6613 18.3044 21.7422 18.1092 21.7422 17.9057C21.7422 17.7022 21.6613 17.507 21.5175 17.3631C21.3736 17.2192 21.1784 17.1384 20.9749 17.1384H18.673V14.8365Z"
                fill={`${mode === "dark" ? "#ffffff" : "#000000"}`}
              />
            </svg>
          )}
          <p className="text-for-links" lang={lng}>
            {links && links.length ? "copy post link" : "open in the new tab"}
          </p>
        </div>
      </div>
    </div>
  );
}

export default ContentOfDetails;
